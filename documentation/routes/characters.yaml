components:
  $ref: ../components/security/security.yaml

paths:
  /api/characters:
    post:
      security:
        - Authorization: [] # use the same name as above
      summary: Create a character
      tags:
        - Characters
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Character"
      responses:
        "201":
          description: Character created -> Get object character.
        "400":
          description: Invalid argument.
        "403":
          description: Forbidden access!
        "409":
          description: Character is already registered.
        "422":
          description: Invalid format.
        "500":
          description: Email and password are required.
          # error aut
    get:
      security:
        - Authorization: [] # Se requiere un token de autenticación Bearer
      summary: Get the name and image of each character.
      tags:
        - Characters
      requestBody:
        required: false
      responses:
        "200":
          description: Get all the characters.
        "400":
          description: Invalid argument.
        "401":
          description: Invalid credentials!
        "403":
          description: Forbidden access!
        # "422":
        #   description: Invalid format.
        # "500":
        #   description: Email and password are required.
        # error aut
  /api/characters/{id}:
    put:
      security:
        - Authorization: [] # Se requiere un token de autenticación Bearer
      summary: Update a character.
      tags:
        - Characters
      parameters:
        - in: path
          name: id
          description: ID of the character to update
          required: true
          schema:
            type: string
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Character"
      responses:
        "200":
          description: Return character updated.
        "400":
          description: Invalid argument.
        "403":
          description: Forbidden access!
        "404":
          description: Character not found. Not found ID!
        "500":
          description: Internal server error.
    delete:
      security:
        - Authorization: [] # Se requiere un token de autenticación Bearer
      summary: Delete a character
      tags:
        - Characters
      parameters:
        - in: path
          name: id
          description: ID of the character to delete
          required: true
          schema:
            type: string
      requestBody:
        required: false
      responses:
        "200":
          description: User token.
        "400":
          description: Invalid argument. Nothing was deleted!
        "401":
          description: Invalid credentials!
        "403":
          description: Forbidden access!
/api/characters/{id}/media:
  get:
    security:
      - Authorization: [] # Se requiere un token de autenticación Bearer
    summary: Get the details of the character and his movies and series.
    tags:
      - Characters
    parameters:
      - in: path
        name: id
        description: ID of the character to get
        required: true
        schema:
          type: string
    requestBody:
      required: false
    responses:
      "200":
        description: Character details.
      "400":
        description: Invalid argument.
      "403":
        description: Forbidden access!
      "404":
        description: Character not found. Not found ID!
      "500":
        description: Internal server error.
/api/characters/filter:
  get:
    security:
      - Authorization: [] # Se requiere un token de autenticación Bearer
    summary: Get the character by name, you can filter by age or weight and get their movies and series.
    tags:
      - Characters
    parameters:
      - in: query
        name: name
        description: The name of the characters you want to filter.
        required: true
        schema:
          type: string
      - in: query
        name: age
        description: The age of the characters you want to filter.
        schema:
          type: string
          nullable: true
      - in: query
        name: weight
        description: The weight of the characters you want to filter.
        schema:
          type: string
          nullable: true
    requestBody:
      required: false
    responses:
      "200":
        description: Character details.
      "204":
        description: The character collection is empty.
      "400":
        description: Invalid argument.
      "403":
        description: Forbidden access!
      "404":
        description: Character not found. Not found ID!
      "500":
        description: Internal server error.
